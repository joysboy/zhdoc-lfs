<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-bison" role="wrap">
  <?dbhtml filename="bison.html"?>

  <sect1info condition="script">
    <productname>bison</productname>
    <productnumber>&bison-version;</productnumber>
    <address>&bison-url;</address>
  </sect1info>

  <title>Bison-&bison-version;</title>

  <indexterm zone="ch-system-bison">
    <primary sortas="a-Bison">Bison</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

<!--E
    <para>The Bison package contains a parser generator.</para>
-->
    <para>Bison 软件包包括一个语法分析程序生成器。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&bison-ch6-sbu;</seg>
        <seg>&bison-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
<!--E
    <title>Installation of Bison</title>
-->
    <title>安装 Bison</title>    

<!--E
    <para>Prepare Bison for compilation:</para>
-->
    <para>为编译 Bison 做准备：</para>

<screen><userinput remap="configure">./configure --prefix=/usr</userinput></screen>

<!--E
    <para>The configure system causes bison to be built without support for
    internationalization of error messages if a <command>bison</command>
    program is not already in $PATH.  The following addition will correct
    this:</para>
-->
    <para>如果 <command>bison</command> 程序不在 $PATH 中的话，编译时将会出现缺乏国际化支持的错误信息。下面处理可以解决这个问题：</para>

<screen><userinput remap="configure">echo '#define YYENABLE_NLS 1' &gt;&gt; config.h</userinput></screen>

<!--E
    <para>Compile the package:</para>
-->
    <para>编译软件包：</para>

<screen><userinput remap="make">make</userinput></screen>

<!--E
    <para>To test the results (about 0.5 SBU), issue:</para>
-->
    <para>要测试结果（大约 0.5 SBU），请运行：</para>

<screen><userinput remap="test">make check</userinput></screen>

<!--E
    <para>Install the package:</para>
-->
    <para>安装软件包：</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-bison" role="content">
<!--E
    <title>Contents of Bison</title>
-->
    <title>Bison 的内容</title>

    <segmentedlist>
<!--E
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>
-->
      <segtitle>安装的程序</segtitle>
      <segtitle>安装的库</segtitle>

      <seglistitem>
        <seg>bison and yacc</seg>
        <seg>liby.a</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
<!--E
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
-->
      <bridgehead renderas="sect3">简要描述</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bison">
        <term><command>bison</command></term>
        <listitem>
<!--E
          <para>Generates, from a series of rules, a program for analyzing the
          structure of text files; Bison is a replacement for Yacc (Yet Another
          Compiler Compiler)</para>
-->
          <para>根据一系列规则来生成一个可以分析文本文件的结构的程序的程序，Bison 是一个替代 Yacc（Yet Another Compiler Compiler）的语法分析程序生成器。</para>
          <indexterm zone="ch-system-bison bison">
            <primary sortas="b-bison">bison</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="yacc">
        <term><command>yacc</command></term>
        <listitem>
<!--E
          <para>A wrapper for <command>bison</command>, meant for programs that
          still call <command>yacc</command> instead of <command>bison</command>;
          it calls <command>bison</command> with the <parameter>-y</parameter>
          option</para>
-->
          <para>一个 <command>bison</command> 的包装，意思是程序仍然调用 <command>yacc</command>  而不是 <command>bison</command> ，它用 <parameter>-y</parameter> 选项调用 <command>bison</command></para>
          <indexterm zone="ch-system-bison yacc">
            <primary sortas="b-yacc">yacc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liby.a">
        <term><filename class="libraryfile">liby.a</filename></term>
        <listitem>
<!--E
          <para>The Yacc library containing implementations of Yacc-compatible
          <function>yyerror</function> and <function>main</function> functions;
          this library is normally not very useful, but POSIX requires it</para>
-->
          <para>acc 库包含与 Yacc 兼容的 <function>yyerror</function> 和 <function>main</function> 函数，这个库通常不是很有用，但是 POSIX 需要它。</para>
          <indexterm zone="ch-system-bison liby.a">
            <primary sortas="c-liby.a">liby.a</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
