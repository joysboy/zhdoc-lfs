<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-db" role="wrap">
  <?dbhtml filename="db.html"?>

  <sect1info condition="script">
    <productname>db</productname>
    <productnumber>&db-version;</productnumber>
    <address>&db-url;</address>
  </sect1info>

  <title>Berkeley DB-&db-version;</title>

  <indexterm zone="ch-system-db">
    <primary sortas="a-Berkeley-DB">Berkeley DB</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

<!--E
    <para>The Berkeley DB package contains programs and utilities used by many
    other applications for database related functions.</para>
-->
    <para>Berkeley DB 包含一些程序和工具，供其他的一些程序来在做数据库相关函数时调用。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&db-ch6-sbu;</seg>
        <seg>&db-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

    <tip>
<!--E
      <title>Other Installation Possibilities</title>
-->
      <title>其他安装的可能性</title>

<!--E
      <para>There are instructions to build this package in the BLFS book if you
      need to build the RPC server or additional language bindings. The
      additional language bindings will require additional packages to be
      installed. See <ulink url="&blfs-root;view/svn/server/databases.html#db"/>
      for suggested installation instructions.</para>
-->
      <para>如果你需要建立一个 RPC 服务器或者是附加语言绑定编译，在 BLFS 手册中有一些编译这个软件包的说明。附加语言的绑定编译还需要一些额外的软件包。参见 <ulink url="&blfs-root;view/svn/server/databases.html#db"/> 的安装说明。</para>

<!--E
      <para>Also, GDBM <emphasis>could</emphasis> be used in place of Berkeley
      DB to satisfy Man-DB. However, since Berkeley DB is considered a core part
      of the LFS build, it will not be listed as a dependency for any package in
      the BLFS book. Likewise, many hours go into testing LFS with Berkeley DB
      installed, not with GDBM. If you fully understand the risks versus
      benefits of using GDBM and wish to use it anyway, see the BLFS
      instructions located at <ulink
      url="&blfs-root;view/svn/general/gdbm.html"/></para>
-->
      <para>另外，GDBM <emphasis>可以</emphasis> 被用来代替 Berkeley DB 来满足数据库需求。但是，因为在LFS构建过程中，Berkeley DB 被认为是一个核心部分，无法列出在 BLFS 手册中把它作为依赖的软件。同样，很多时候我们测试的是安装了 Berkeley DB 的 LFS 系统，而不是 GDBM。如果你清楚的了解了使用 GDBM 的风险和好处，仍然想要采用它，可以参考BLFS手册中的说明 <ulink url="&blfs-root;view/svn/general/gdbm.html"/></para>

    </tip>

  </sect2>

  <sect2 role="installation">
<!--E
    <title>Installation of Berkeley DB</title>
-->
    <title>安装 Berkeley DB</title>

<!--E
    <para>Apply an upstream patch so that replication clients can open a
    sequence:</para>
-->
    <para>应用一个补丁以便复制的客户端可以打开一个序列：</para>

<screen><userinput remap="pre">patch -Np1 -i ../&db-fixes-patch;</userinput></screen>

<!--E
    <para>Prepare Berkeley DB for compilation:</para>
-->
    <para>为编译 Berkeley DB 做准备：</para>

<screen><userinput remap="configure">cd build_unix
../dist/configure --prefix=/usr --enable-compat185 --enable-cxx</userinput></screen>

    <variablelist>
<!--E
      <title>The meaning of the configure options:</title>
-->
      <title>配置选项的含义：</title>

      <varlistentry>
        <term><parameter>--enable-compat185</parameter></term>
        <listitem>
<!--E
          <para>This option enables building Berkeley DB 1.85 compatibility
          API.</para>
-->
          <para>这个选项指定编译 Berkeley DB 1.85 向上兼容性 API。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-cxx</parameter></term>
        <listitem>
<!--E
          <para>This option enables building C++ API libraries.</para>
-->
          <para>这个选项指定编译 C++ API 库。</para>
        </listitem>
      </varlistentry>

    </variablelist>

<!--E
    <para>Compile the package:</para>
-->
    <para>编译软件包：</para>

<screen><userinput remap="make">make</userinput></screen>

<!--E
    <para>It is not possible to test the package meaningfully, because
    that would involve building TCL bindings. TCL bindings cannot be
    built properly now because TCL is linked against Glibc in
    <filename class="directory">/tools</filename>, not against Glibc in
    <filename class="directory">/usr</filename>.</para>
-->
    <para>现在测试软件包是没有意义的，因为这将会导致 TCL 捆绑编译。TCL不能被准确的编译，因为 TCL 还是链接到 <filename class="directory">/tools</filename> 下的 Glibc，而不是 <filename class="directory">/usr</filename> 目录下的Glibc。</para>

<!--E
    <para>Install the package:</para>
-->
    <para>安装软件包：</para>

<screen><userinput remap="install">make docdir=/usr/share/doc/db-&db-version; install</userinput></screen>

    <variablelist>
<!--E
      <title>The meaning of the make parameter:</title>
-->
      <title>make 参数的含义：</title>

      <varlistentry>
        <term><parameter>docdir=...</parameter></term>
        <listitem>
<!--E
          <para>This variable specifies the correct place for the
          documentation.</para>
-->
          <para>这条安装命令将 db 的文档安装到正确的位置。</para>
        </listitem>
      </varlistentry>

    </variablelist>

<!--E
    <para>Fix the ownership of the installed documentation:</para>
-->
    <para>修改安装文件的归属：</para>
<screen><userinput remap="install">chown -Rv root:root /usr/share/doc/db-&db-version;</userinput></screen>

  </sect2>

  <sect2 id="contents-db" role="content">
<!--E
    <title>Contents of Berkeley DB</title>
-->
    <title>Berkeley DB 的内容</title>    

    <segmentedlist>
<!--E
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
-->
      <segtitle>安装的程序</segtitle>
      <segtitle>安装的库</segtitle>

      <seglistitem>
        <seg>db_archive, db_checkpoint, db_deadlock, db_dump, db_hotbackup,
        db_load, db_printlog, db_recover, db_stat, db_upgrade, and db_verify</seg>
        <seg>libdb.{so,ar}and libdb_cxx.r{o,ar}</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
<!--E
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
-->
      <bridgehead renderas="sect3">简要描述</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="db_archive">
        <term><command>db_archive</command></term>
        <listitem>
<!--E
          <para>Prints the pathnames of log files that are no longer in use</para>
-->
          <para>打印出不再使用的日志文件路径名</para>
          <indexterm zone="ch-system-db db_archive">
            <primary sortas="b-db_archive">db_archive</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_checkpoint">
        <term><command>db_checkpoint</command></term>
        <listitem>
<!--E
          <para>A daemon used to monitor and checkpoint database logs</para>
-->
          <para>监视和检查数据库日志的守护进程</para>
          <indexterm zone="ch-system-db db_checkpoint">
            <primary sortas="b-db_checkpoint">db_checkpoint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_deadlock">
        <term><command>db_deadlock</command></term>
        <listitem>
<!--E
          <para>A daemon used to abort lock requests when deadlocks are
          detected</para>
-->
          <para>当死锁发生时，退出锁定要求</para>
          <indexterm zone="ch-system-db db_deadlock">
            <primary sortas="b-db_deadlock">db_deadlock</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_dump">
        <term><command>db_dump</command></term>
        <listitem>
<!--E
          <para>Converts database files to a plain-text file format readable
          by <command>db_load</command></para>
-->
          <para>把数据库文件转换成 <command>db_load</command> 能认出的文本文件</para>
          <indexterm zone="ch-system-db db_dump">
            <primary sortas="b-db_dump">db_dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_hotbackup">
        <term><command>db_hotbackup</command></term>
        <listitem>
<!--E
          <para>Creates <quote>hot backup</quote> or <quote>hot failover</quote>
          snapshots of Berkeley DB databases</para>
-->
          <para>创建"hot backup"或者是"hot failover"的 Berkeley DB 数据库镜像。</para>
          <indexterm zone="ch-system-db db_hotbackup">
            <primary sortas="b-db_hotbackup">db_hotbackup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_load">
        <term><command>db_load</command></term>
        <listitem>
<!--E
          <para>Is used to create database files from plain-text files</para>
-->
          <para>从 plain-text 文件中创建出数据库文件</para>
          <indexterm zone="ch-system-db db_load">
            <primary sortas="b-db_load">db_load</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_printlog">
        <term><command>db_printlog</command></term>
        <listitem>
<!--E
          <para>Converts database log files to human readable text</para>
-->
          <para>把数据库日志文件转换成人能读懂的文本</para>
          <indexterm zone="ch-system-db db_printlog">
            <primary sortas="b-db_printlog">db_printlog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_recover">
        <term><command>db_recover</command></term>
        <listitem>
<!--E
          <para>Is used to restore a database to a consistent state after a
          failure</para>
-->
          <para>在发生错误后，把数据库恢复到一致的状态</para>
          <indexterm zone="ch-system-db db_recover">
            <primary sortas="b-db_recover">db_recover</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_stat">
        <term><command>db_stat</command></term>
        <listitem>
<!--E
          <para>Displays statistics for Berkeley databases</para>
-->
          <para>显示数据库环境统计</para>
          <indexterm zone="ch-system-db db_stat">
            <primary sortas="b-db_stat">db_stat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_upgrade">
        <term><command>db_upgrade</command></term>
        <listitem>
<!--E
          <para>Is used to upgrade database files to a newer version of
          Berkeley DB</para>
-->
          <para>把数据库文件转换成新版本的 Berkley DB 格式</para>
          <indexterm zone="ch-system-db db_upgrade">
            <primary sortas="b-db_upgrade">db_upgrade</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="db_verify">
        <term><command>db_verify</command></term>
        <listitem>
<!--E
          <para>Is used to run consistency checks on database files</para>
-->
          <para>对数据库文件进行一致性检查</para>
          <indexterm zone="ch-system-db db_verify">
            <primary sortas="b-db_verify">db_verify</primary>
          </indexterm>
        </listitem>
      </varlistentry>


      <varlistentry id="libdb">
        <term><filename class="libraryfile">libdb.{so,a}</filename></term>
        <listitem>
<!--E
          <para>Contains functions to manipulate database files from C
          programs</para>
-->
          <para>包含 C 程序中可操作数据库文件的函数</para>
          <indexterm zone="ch-system-db libdb">
            <primary sortas="c-libdb">libdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdb_cxx">
        <term><filename class="libraryfile">libdb_cxx.{so,a}</filename></term>
        <listitem>
<!--E
          <para>Contains functions to manipulate database files from C++
          programs</para>
-->
          <para>包含 C++ 程序中可操作数据库文件的函数</para>
          <indexterm zone="ch-system-db libdb_cxx">
            <primary sortas="c-libdb_cxx">libdb_cxx</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
