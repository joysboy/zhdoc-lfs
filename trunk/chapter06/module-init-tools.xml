<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-module-init-tools" role="wrap">
  <?dbhtml filename="module-init-tools.html"?>

  <sect1info condition="script">
    <productname>module-init-tools</productname>
    <productnumber>&module-init-tools-version;</productnumber>
    <address>&module-init-tools-url;</address>
  </sect1info>

  <title>Module-Init-Tools-&module-init-tools-version;</title>

  <indexterm zone="ch-system-module-init-tools">
    <primary sortas="a-Module-Init-Tools">Module-Init-Tools</primary>
  </indexterm>

  <sect2 role="package">
    <title/>
<!--E
    <para>The Module-Init-Tools package contains programs for handling kernel
    modules in Linux kernels greater than or equal to version 2.5.47.</para>
-->
    <para>Module-Init-Tools 包含处理 2.5.47 及以上版本的内核模块时使用的工具。</para>
    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&module-init-tools-ch6-sbu;</seg>
        <seg>&module-init-tools-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
<!--E
    <title>Installation of Module-Init-Tools</title>
-->
    <title>安装 Module-Init-Tools</title>
<!--E
    <para>The tarball only contains sgml source for the manpages. The following
    patch contains the result of processing this through <command>docbook2man</command>
    (see <ulink url="&blfs-root;view/svn/pst/docbook-utils.html"/>)
    which we do not build as part of a basic LFS installation:</para>
-->
    <para>tarball 仅仅包含手册的标准源代码。下面的补丁包含了 <command>docbook2man</command> 了运行的结果（参见 <ulink url="&blfs-root;view/svn/pst/docbook-utils.html"/> ），但是作为基本的 LFS 系统，我们不会安装它:</para>
<screen><userinput remap="pre">patch -Np1 -i ../&module-init-manpages-patch;</userinput></screen>
<!--E
    <para>The testsuite of this package is geared towards the needs of its
    Maintainer. The command <command>make check</command> builds a specially
    wrapped version of modprobe which is useless for normal operation. To run
    this (about 0.2 SBU), issue the following commands (note that the
    <command>make clean</command> command is required to clean up the source
    tree before recompiling for normal use):</para>
-->
    <para>这个包的测试套件是根据它的守护进程需要来调整相适应的。<command>make check</command> 命令创建了加载模块的特殊封装版本，而这对一般的操作是没有必要的。运行这个命令（大约 0.2 SBU），运行接下来的命令（注意 <command>make clean</command> 命令需在源码重新编译前清理源码树）：</para>

<screen><userinput remap="test">./configure
make check
make clean</userinput></screen>
<!--E
    <para>Prepare Module-Init-Tools for compilation:</para>
-->
    <para>为编译 Module-Init-Tools 做准备：</para>
<screen><userinput remap="configure">./configure --prefix=/ --enable-zlib --mandir=/usr/share/man</userinput></screen>

<!--E
    <para>Compile the package:</para>
-->
    <para>编译软件包：</para>
<screen><userinput remap="make">make</userinput></screen>

<!--E
    <para>Install the package:</para>
-->
    <para>安装软件包：</para>
<screen><userinput remap="install">make INSTALL=install install</userinput></screen>

    <variablelist>
<!--E
      <title>The meaning of the make parameter:</title>
-->
      <title>make 参数的含义：</title>     
 <varlistentry>
        <term><parameter>INSTALL=install</parameter></term>
        <listitem>
<!--E
          <para>Normally, <command>make install</command> will not install the
          binaries if they already exist. This option overrides that behavior by
          calling <command>install</command> instead of using the default
          wrapper script.</para>
-->
          <para>正常情况下，如果二进制文件已经存在了，<command>make install</command> 就不会安装它们。这个选项是调用 <command>install</command> 而不是使用默认封装的脚本。</para>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

  <sect2 id="contents-module-init-tools" role="content">
<!--E
    <title>Contents of Module-Init-Tools</title>
-->
    <title>Module-Init-Tools 的内容</title>
    <segmentedlist>
<!--E
      <segtitle>Installed programs</segtitle>
-->
      <segtitle>安装的程序</segtitle>
      <seglistitem>
        <seg>depmod, generate-modprobe.conf, insmod, insmod.static, lsmod,
        modinfo, modprobe, and rmmod</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="depmod">
        <term><command>depmod</command></term>
        <listitem>
<!--E
          <para>Creates a dependency file based on the symbols it finds in the
          existing set of modules; this dependency file is used by
          <command>modprobe</command> to automatically load the required
          modules</para>
-->
          <para>创建一个可加载内核模块的依赖关系文件，<command>modprobe</command> 用它来自动加载模块</para>     
     <indexterm zone="ch-system-module-init-tools depmod">
            <primary sortas="b-depmod">depmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="generate-modprobe.conf">
        <term><command>generate-modprobe.conf</command></term>
        <listitem>
<!--E
          <para>Creates a modprobe.conf file from an existing 2.2 or 2.4 module
          setup</para>
-->
          <para>从一个现存的2.2 或者 2.4版本内核的模块设置中创建一个 modprobe.conf 文件</para>
          <indexterm zone="ch-system-module-init-tools generate-modprobe.conf">
            <primary sortas="b-generate-modprobe.conf">generate-modprobe.conf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="insmod">
        <term><command>insmod</command></term>
        <listitem>
<!--E
          <para>Installs a loadable module in the running kernel</para>
-->
          <para>向正在运行的内核加载模块</para>     
     <indexterm zone="ch-system-module-init-tools insmod">
            <primary sortas="b-insmod">insmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="insmod.static">
        <term><command>insmod.static</command></term>
        <listitem>
<!--E
          <para>A statically compiled version of <command>insmod</command></para>
-->
          <para><command>insmod</command> 的静态编译版本</para>     
     <indexterm zone="ch-system-module-init-tools insmod.static">
            <primary sortas="b-insmod.static">insmod.static</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lsmod">
        <term><command>lsmod</command></term>
        <listitem>
<!--E
          <para>Lists currently loaded modules</para>
-->
          <para>显示当前已加载的内核模块信息</para>     
     <indexterm zone="ch-system-module-init-tools lsmod">
            <primary sortas="b-lsmod">lsmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modinfo">
        <term><command>modinfo</command></term>
        <listitem>
<!--E
          <para>Examines an object file associated with a kernel module and
          displays any information that it can glean</para>
-->
          <para>检查与内核模块相关联的目标文件，并打印出所有能得到的信息</para>     
     <indexterm zone="ch-system-module-init-tools modinfo">
            <primary sortas="b-modinfo">modinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modprobe">
        <term><command>modprobe</command></term>
        <listitem>
<!--E
          <para>Uses a dependency file, created by
          <command>depmod</command>, to automatically load relevant modules</para>
-->
          <para>利用 <command>depmod</command> 创建的依赖关系文件来自动加载相关的模块</para>     
     <indexterm zone="ch-system-module-init-tools modprobe">
            <primary sortas="b-modprobe">modprobe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rmmod">
        <term><command>rmmod</command></term>
        <listitem>
<!--E
          <para>Unloads modules from the running kernel</para>
-->
          <para>从当前运行的内核中卸载模块</para>     
     <indexterm zone="ch-system-module-init-tools rmmod">
            <primary sortas="b-rmmod">rmmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
